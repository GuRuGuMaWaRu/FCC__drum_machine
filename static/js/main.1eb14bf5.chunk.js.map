{"version":3,"sources":["context/sound/soundContext.js","components/displays/CurrentSoundDisplay.js","components/sounds/DrumPad.js","components/sounds/DrumPadsPanel.js","components/panes/SoundPlayPane.js","components/displays/CurrentTrackItem.js","components/displays/CurrentTrackDisplay.js","components/sounds/SoundStoreItem.js","components/sounds/SoundStore.js","components/panes/SoundStorePane.js","context/sound/soundReducer.js","context/types.js","context/sound/SoundState.js","App.js","index.js"],"names":["soundContext","createContext","CurrentSoundDisplay","currentSound","useContext","SoundContext","id","name","DrumPad","drumPad","handlePlay","drumSound","useRef","className","onClick","audio","current","ref","src","DrumPadsPanel","currentTrack","addSound","clearDisplays","drumData","currentTime","play","length","map","key","SoundPlayPane","CurrentTrackItem","isPlayed","CurrentTrackDisplay","limitReached","sound","SoundStoreItem","savedTrack","track","handleSelectTrack","handleDeleteTrack","SoundStore","savedTracks","deleteTrack","selectTrack","SoundStorePane","playSound","removeSound","saveTrack","clearTrack","playInterval","clearInterval","iteration","setInterval","state","action","type","payload","slice","uuidv1","filter","SoundState","props","useReducer","soundReducer","dispatch","Provider","value","children","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1eb14bf5.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst soundContext = createContext();\r\n\r\nexport default soundContext;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport SoundContext from \"../../context/sound/soundContext\";\r\nimport \"./CurrentSoundDisplay.css\";\r\n\r\nconst CurrentSoundDisplay = () => {\r\n  const soundContext = useContext(SoundContext);\r\n  const { currentSound } = soundContext;\r\n\r\n  return <div id=\"display\">{(currentSound && currentSound.name) || \"---\"}</div>;\r\n};\r\n\r\nexport default CurrentSoundDisplay;\r\n","import React, { useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./DrumPad.css\";\r\n\r\nconst DrumPad = ({ drumPad, handlePlay }) => {\r\n  const drumSound = useRef();\r\n\r\n  const handleClick = () => {\r\n    handlePlay({ audio: drumSound.current, name: drumPad.name });\r\n  };\r\n\r\n  return (\r\n    <div className=\"drum-pad\" onClick={handleClick}>\r\n      {drumPad.name}\r\n      <audio\r\n        ref={drumSound}\r\n        className=\"clip\"\r\n        id={drumPad.name}\r\n        src={drumPad.src}\r\n      ></audio>\r\n    </div>\r\n  );\r\n};\r\n\r\nDrumPad.propTypes = {\r\n  drumPad: PropTypes.object.isRequired,\r\n  handlePlay: PropTypes.func.isRequired\r\n};\r\n\r\nexport default DrumPad;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport DrumPad from \"./DrumPad\";\r\nimport SoundContext from \"../../context/sound/soundContext\";\r\nimport \"./DrumPadsPanel.css\";\r\n\r\nconst DrumPadsPanel = () => {\r\n  const soundContext = useContext(SoundContext);\r\n  const { currentTrack, addSound, clearDisplays } = soundContext;\r\n\r\n  const drumPads = [\r\n    {\r\n      name: \"Q\",\r\n      src: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\"\r\n    },\r\n    {\r\n      name: \"W\",\r\n      src: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\"\r\n    },\r\n    {\r\n      name: \"E\",\r\n      src: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\"\r\n    },\r\n    {\r\n      name: \"A\",\r\n      src: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\"\r\n    },\r\n    {\r\n      name: \"S\",\r\n      src: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\"\r\n    },\r\n    {\r\n      name: \"D\",\r\n      src: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\"\r\n    },\r\n    {\r\n      name: \"Z\",\r\n      src: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\"\r\n    },\r\n    {\r\n      name: \"X\",\r\n      src: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\"\r\n    },\r\n    {\r\n      name: \"C\",\r\n      src: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\"\r\n    }\r\n  ];\r\n\r\n  const handlePlay = drumData => {\r\n    const { audio, name } = drumData;\r\n\r\n    audio.currentTime = 0;\r\n    audio.play();\r\n\r\n    if (currentTrack.length > 9) {\r\n      clearDisplays();\r\n    } else {\r\n      addSound({\r\n        name: name,\r\n        audio: audio\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"drum-pads-panel\">\r\n      {drumPads.map(drumPad => (\r\n        <DrumPad key={drumPad.name} drumPad={drumPad} handlePlay={handlePlay} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrumPadsPanel;\r\n","import React from \"react\";\r\n\r\nimport CurrentSoundDisplay from \"../displays/CurrentSoundDisplay\";\r\nimport DrumPadsPanel from \"../sounds/DrumPadsPanel\";\r\nimport \"./SoundPlayPane.css\";\r\n\r\nconst SoundPlayPane = () => {\r\n  return (\r\n    <div id=\"sound-play-pane\">\r\n      <CurrentSoundDisplay />\r\n      <DrumPadsPanel />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SoundPlayPane;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./CurrentTrackItem.css\";\r\n\r\nconst CurrentTrackItem = ({ name, isPlayed }) => {\r\n  return (\r\n    <div className={`played-sound ${isPlayed ? \"played-sound-played\" : \"\"}`}>\r\n      {name}\r\n    </div>\r\n  );\r\n};\r\n\r\nCurrentTrackItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  isPlayed: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default CurrentTrackItem;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport CurrentTrackItem from \"./CurrentTrackItem\";\r\nimport SoundContext from \"../../context/sound/soundContext\";\r\nimport \"./CurrentTrackDisplay.css\";\r\n\r\nconst CurrentTrackDisplay = () => {\r\n  const soundContext = useContext(SoundContext);\r\n  const { currentSound, currentTrack } = soundContext;\r\n\r\n  const limitReached = currentTrack.length > 9;\r\n\r\n  return (\r\n    <div\r\n      className={`played-sounds-display ${limitReached ? \"limit-reached\" : \"\"}`}\r\n    >\r\n      {currentTrack.length === 0\r\n        ? \"---\"\r\n        : currentTrack.map(sound => (\r\n            <CurrentTrackItem\r\n              key={sound.id}\r\n              name={sound.name}\r\n              isPlayed={\r\n                currentSound && currentSound.id === sound.id ? true : false\r\n              }\r\n            />\r\n          ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentTrackDisplay;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./SoundStoreItem.css\";\r\n\r\nconst SoundStoreItem = ({\r\n  savedTrack: { id, track },\r\n  handleSelectTrack,\r\n  handleDeleteTrack\r\n}) => {\r\n  return (\r\n    <div className=\"sound-store-item\">\r\n      <div\r\n        className=\"sound-store-item-track\"\r\n        onClick={() => handleSelectTrack(id)}\r\n      >\r\n        {track.map(sound => (\r\n          <span key={sound.id} className=\"sound-store-item-sound\">\r\n            {sound.name}\r\n          </span>\r\n        ))}\r\n      </div>\r\n      <button\r\n        className=\"delete-store-item-button\"\r\n        onClick={() => handleDeleteTrack(id)}\r\n      >\r\n        <i className=\"fas fa-times\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nSoundStoreItem.propTypes = {\r\n  savedTrack: PropTypes.object.isRequired,\r\n  handleSelectTrack: PropTypes.func.isRequired,\r\n  handleDeleteTrack: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SoundStoreItem;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport SoundStoreItem from \"./SoundStoreItem\";\r\nimport SoundContext from \"../../context/sound/soundContext\";\r\nimport \"./SoundStore.css\";\r\n\r\nconst SoundStore = () => {\r\n  const soundContext = useContext(SoundContext);\r\n  const { savedTracks, deleteTrack, selectTrack } = soundContext;\r\n\r\n  const handleSelectTrack = id => {\r\n    selectTrack(id);\r\n  };\r\n\r\n  const handleDeleteTrack = id => {\r\n    deleteTrack(id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sound-store\">\r\n      {savedTracks.length > 0 &&\r\n        savedTracks.map(savedTrack => (\r\n          <SoundStoreItem\r\n            key={savedTrack.id}\r\n            savedTrack={savedTrack}\r\n            handleSelectTrack={handleSelectTrack}\r\n            handleDeleteTrack={handleDeleteTrack}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SoundStore;\r\n","import React, { useContext, useRef } from \"react\";\r\n\r\nimport CurrentTrackDisplay from \"../displays/CurrentTrackDisplay\";\r\nimport SoundStore from \"../sounds/SoundStore\";\r\nimport SoundContext from \"../../context/sound/soundContext\";\r\nimport \"./SoundStorePane.css\";\r\n\r\nconst SoundStorePane = () => {\r\n  const soundContext = useContext(SoundContext);\r\n  const {\r\n    currentTrack,\r\n    savedTracks,\r\n    playSound,\r\n    removeSound,\r\n    saveTrack,\r\n    clearTrack\r\n  } = soundContext;\r\n\r\n  const playInterval = useRef();\r\n\r\n  const handlePlay = () => {\r\n    let iteration = 0;\r\n\r\n    playInterval.current = setInterval(() => {\r\n      if (iteration >= currentTrack.length) {\r\n        clearInterval(playInterval.current);\r\n        playInterval.current = null;\r\n        playSound(null);\r\n        return;\r\n      }\r\n\r\n      playSound({\r\n        id: currentTrack[iteration].id,\r\n        name: currentTrack[iteration].name\r\n      });\r\n\r\n      currentTrack[iteration].audio.currentTime = 0;\r\n      currentTrack[iteration].audio.play();\r\n\r\n      iteration += 1;\r\n    }, 500);\r\n  };\r\n\r\n  const handleStop = () => {\r\n    clearInterval(playInterval.current);\r\n    playInterval.current = null;\r\n    playSound(null);\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    removeSound();\r\n  };\r\n\r\n  const handleClear = () => {\r\n    clearTrack();\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (savedTracks.length < 5 && currentTrack.length > 0) {\r\n      saveTrack();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sound-store-pane\">\r\n      <div className=\"current-track-area\">\r\n        {!playInterval.current ? (\r\n          <button className=\"control-button play-button\" onClick={handlePlay}>\r\n            <i className=\"fas fa-play\"></i>\r\n          </button>\r\n        ) : (\r\n          <button className=\"control-button play-button\" onClick={handleStop}>\r\n            <i className=\"fas fa-stop\"></i>\r\n          </button>\r\n        )}\r\n        <CurrentTrackDisplay />\r\n        <button className=\"control-button\" onClick={handleRemove}>\r\n          <i className=\"fas fa-chevron-left\"></i>\r\n        </button>\r\n        <button className=\"control-button\" onClick={handleClear}>\r\n          <i className=\"fas fa-times\"></i>\r\n        </button>\r\n        <button className=\"control-button\" onClick={handleSave}>\r\n          <i className=\"fas fa-chevron-down\"></i>\r\n        </button>\r\n      </div>\r\n      <SoundStore />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SoundStorePane;\r\n","import uuidv1 from \"uuid/v1\";\r\n\r\nimport {\r\n  ADD_SOUND,\r\n  PLAY_SOUND,\r\n  REMOVE_SOUND,\r\n  CLEAR_DISPLAYS,\r\n  SAVE_TRACK,\r\n  DELETE_TRACK,\r\n  CLEAR_CURRENT_TRACK,\r\n  SELECT_TRACK\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_SOUND:\r\n      return {\r\n        ...state,\r\n        currentSound: { id: action.payload.id, name: action.payload.name },\r\n        currentTrack: [...state.currentTrack, action.payload]\r\n      };\r\n    case PLAY_SOUND:\r\n      return {\r\n        ...state,\r\n        currentSound: action.payload\r\n      };\r\n    case REMOVE_SOUND:\r\n      return {\r\n        ...state,\r\n        currentTrack: [...state.currentTrack.slice(0, -1)]\r\n      };\r\n    case CLEAR_DISPLAYS:\r\n      return {\r\n        ...state,\r\n        currentSound: {}\r\n      };\r\n    case SAVE_TRACK:\r\n      return {\r\n        ...state,\r\n        currentSound: {},\r\n        currentTrack: [],\r\n        savedTracks: [\r\n          { id: uuidv1(), track: state.currentTrack },\r\n          ...state.savedTracks\r\n        ]\r\n      };\r\n    case DELETE_TRACK:\r\n      return {\r\n        ...state,\r\n        savedTracks: state.savedTracks.filter(\r\n          track => track.id !== action.payload\r\n        )\r\n      };\r\n    case CLEAR_CURRENT_TRACK:\r\n      return {\r\n        ...state,\r\n        currentSound: {},\r\n        currentTrack: []\r\n      };\r\n    case SELECT_TRACK:\r\n      return {\r\n        ...state,\r\n        currentTrack: state.savedTracks.filter(\r\n          track => track.id === action.payload\r\n        )[0].track\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// Sounds\r\nexport const ADD_SOUND = \"ADD_SOUND\";\r\nexport const PLAY_SOUND = \"PLAY_SOUND\";\r\nexport const REMOVE_SOUND = \"REMOVE_SOUND\";\r\nexport const CLEAR_DISPLAYS = \"CLEAR_DISPLAYS\";\r\n\r\n// Tracks\r\nexport const SAVE_TRACK = \"SAVE_TRACK\";\r\nexport const DELETE_TRACK = \"DELETE_TRACK\";\r\nexport const CLEAR_CURRENT_TRACK = \"CLEAR_CURRENT_TRACK\";\r\nexport const SELECT_TRACK = \"SELECT_TRACK\";\r\n","import React, { useReducer } from \"react\";\r\nimport uuidv1 from \"uuid/v1\";\r\n\r\nimport SoundContext from \"./soundContext\";\r\nimport soundReducer from \"./soundReducer\";\r\nimport {\r\n  ADD_SOUND,\r\n  PLAY_SOUND,\r\n  CLEAR_DISPLAYS,\r\n  REMOVE_SOUND,\r\n  SAVE_TRACK,\r\n  DELETE_TRACK,\r\n  CLEAR_CURRENT_TRACK,\r\n  SELECT_TRACK\r\n} from \"../types\";\r\n\r\nconst SoundState = props => {\r\n  const initialState = {\r\n    currentSound: {},\r\n    currentTrack: [],\r\n    savedTracks: [\r\n      // {\r\n      //   id: 1,\r\n      //   track: [\r\n      //     { id: 1, name: \"Q\" },\r\n      //     { id: 2, name: \"E\" }\r\n      //   ]\r\n      // }\r\n    ]\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(soundReducer, initialState);\r\n\r\n  // Add sound\r\n  const addSound = ({ name, audio }) => {\r\n    dispatch({\r\n      type: ADD_SOUND,\r\n      payload: { name: name, audio: audio, id: uuidv1() }\r\n    });\r\n  };\r\n\r\n  // Play sound\r\n  const playSound = sound => {\r\n    dispatch({\r\n      type: PLAY_SOUND,\r\n      payload: sound\r\n    });\r\n  };\r\n\r\n  // Remove sound\r\n  const removeSound = () => {\r\n    dispatch({\r\n      type: REMOVE_SOUND\r\n    });\r\n  };\r\n\r\n  // Clear displays\r\n  const clearDisplays = () => {\r\n    dispatch({\r\n      type: CLEAR_DISPLAYS\r\n    });\r\n  };\r\n\r\n  // Save track\r\n  const saveTrack = () => {\r\n    dispatch({\r\n      type: SAVE_TRACK\r\n    });\r\n  };\r\n\r\n  // Delete track\r\n  const deleteTrack = id => {\r\n    dispatch({\r\n      type: DELETE_TRACK,\r\n      payload: id\r\n    });\r\n  };\r\n\r\n  // Clear currently played track\r\n  const clearTrack = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENT_TRACK\r\n    });\r\n  };\r\n\r\n  // Select track from the store\r\n  const selectTrack = id => {\r\n    dispatch({\r\n      type: SELECT_TRACK,\r\n      payload: id\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SoundContext.Provider\r\n      value={{\r\n        currentSound: state.currentSound,\r\n        currentTrack: state.currentTrack,\r\n        savedTracks: state.savedTracks,\r\n        addSound,\r\n        playSound,\r\n        removeSound,\r\n        clearDisplays,\r\n        saveTrack,\r\n        deleteTrack,\r\n        clearTrack,\r\n        selectTrack\r\n      }}\r\n    >\r\n      {props.children}\r\n    </SoundContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SoundState;\r\n","import React from \"react\";\n\nimport SoundPlayPane from \"./components/panes/SoundPlayPane\";\nimport SoundStorePane from \"./components/panes/SoundStorePane\";\n\nimport SoundState from \"./context/sound/SoundState\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <SoundState>\n      <div id=\"drum-machine\">\n        <div className=\"title\">Soundblaster 3000</div>\n        <div className=\"panes\">\n          <SoundPlayPane />\n          <SoundStorePane />\n        </div>\n      </div>\n    </SoundState>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}